# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class S3parcp < Formula
  desc "Copy large files to, from, and between s3 buckets with parallelism"
  homepage "https://github.com/chanzuckerberg/s3parcp"
  version "1.0.1"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/chanzuckerberg/s3parcp/releases/download/v1.0.1/s3parcp_1.0.1_darwin_arm64.tar.gz"
      sha256 "50873b5afc38681d3e225c73a34791c463f7cefa4964b31fcf4f6f08cdb0cafa"

      def install
        bin.install "s3parcp"
        bash_completion.install "completions/bash" => "s3parcp"
        zsh_completion.install "completions/zsh" => "_s3parcp"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/chanzuckerberg/s3parcp/releases/download/v1.0.1/s3parcp_1.0.1_darwin_amd64.tar.gz"
      sha256 "3907b78370285af09330b2db9151cca21289882596b016591e8c106d1110c5f1"

      def install
        bin.install "s3parcp"
        bash_completion.install "completions/bash" => "s3parcp"
        zsh_completion.install "completions/zsh" => "_s3parcp"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/chanzuckerberg/s3parcp/releases/download/v1.0.1/s3parcp_1.0.1_linux_arm64.tar.gz"
      sha256 "5f5fb1376869372d1937265b65c37403915bb920b5fdc90d1f114fa9885e0211"

      def install
        bin.install "s3parcp"
        bash_completion.install "completions/bash" => "s3parcp"
        zsh_completion.install "completions/zsh" => "_s3parcp"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/chanzuckerberg/s3parcp/releases/download/v1.0.1/s3parcp_1.0.1_linux_amd64.tar.gz"
      sha256 "b8d54092a99da4c163ab6cfd75f158cddedca9dfaca63a56497ac486d9b3242b"

      def install
        bin.install "s3parcp"
        bash_completion.install "completions/bash" => "s3parcp"
        zsh_completion.install "completions/zsh" => "_s3parcp"
      end
    end
  end

  test do
    system "#{bin}/s3parcp --version"
  end
end
