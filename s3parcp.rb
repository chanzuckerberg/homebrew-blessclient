# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class S3parcp < Formula
  desc "Copy large files to, from, and between s3 buckets with parallelism"
  homepage "https://github.com/chanzuckerberg/s3parcp"
  version "1.0.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/chanzuckerberg/s3parcp/releases/download/v1.0.0/s3parcp_1.0.0_darwin_amd64.tar.gz"
      sha256 "38acd2c4981bd1ba8cf49182270ededc8ffd9dcf82104f8d04377f42cc60704d"

      def install
        bin.install "s3parcp"
        bash_completion.install "completions/bash" => "s3parcp"
        zsh_completion.install "completions/zsh" => "_s3parcp"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/chanzuckerberg/s3parcp/releases/download/v1.0.0/s3parcp_1.0.0_darwin_arm64.tar.gz"
      sha256 "779e1b1b9da9a97107d3343140d16c62964d4ed9b8eac419fd91a2df9102f553"

      def install
        bin.install "s3parcp"
        bash_completion.install "completions/bash" => "s3parcp"
        zsh_completion.install "completions/zsh" => "_s3parcp"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/chanzuckerberg/s3parcp/releases/download/v1.0.0/s3parcp_1.0.0_linux_arm64.tar.gz"
      sha256 "8d8384eb5dd15339095c571b43b7b06a0a26cb9e60a3d03aec10f7b69e0d2e08"

      def install
        bin.install "s3parcp"
        bash_completion.install "completions/bash" => "s3parcp"
        zsh_completion.install "completions/zsh" => "_s3parcp"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/chanzuckerberg/s3parcp/releases/download/v1.0.0/s3parcp_1.0.0_linux_amd64.tar.gz"
      sha256 "902ea2d983c4ca2801ae4d656137df71b13a8cc6f53145cf4c592e3769001995"

      def install
        bin.install "s3parcp"
        bash_completion.install "completions/bash" => "s3parcp"
        zsh_completion.install "completions/zsh" => "_s3parcp"
      end
    end
  end

  test do
    system "#{bin}/s3parcp --version"
  end
end
